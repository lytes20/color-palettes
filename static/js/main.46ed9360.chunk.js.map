{"version":3,"sources":["components/Palettes.jsx","data/index.js","App.js","reportWebVitals.js","index.js"],"names":["PaletteItem","styled","div","props","colorCode","DesignSampleContainer","bg","Palettes","colorPalettes","class","map","colorPalette","palettesDocs","PalettesWrapper","display","App","useState","current","setCurrent","length","className","onClick","palettesDocsItem","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAEMA,EAAcC,IAAOC,IAAV,oNAEK,SAACC,GAAD,OAAWA,EAAMC,aAWjCC,EAAwBJ,IAAOC,IAAV,wDACL,SAACC,GAAD,OAAWA,EAAMG,MA0BxBC,I,EAAAA,EAvBf,SAAkBJ,GAChB,IAAQK,EAAsBL,EAAtBK,cAAeF,EAAOH,EAAPG,GACvB,OACE,sBAAKG,MAAM,YAAX,UACE,qBAAKA,MAAM,2BAAX,SACGD,EAAcE,KAAI,SAACC,GAClB,IAAQP,EAAcO,EAAdP,UACR,OACE,cAACJ,EAAD,CAEEI,UAAWA,EACXK,MAAM,eAHR,SAKE,4BAAIL,KAJCA,QASb,cAACC,EAAD,CAAuBC,GAAIA,QCrC3BM,EAAe,CACnB,CACEJ,cAAe,CACb,CAAEJ,UAAW,WACb,CAAEA,UAAW,WACb,CAAEA,UAAW,WACb,CAAEA,UAAW,YAEfE,GAAI,WAGN,CACEE,cAAe,CACb,CAAEJ,UAAW,WACb,CAAEA,UAAW,WACb,CAAEA,UAAW,WACb,CAAEA,UAAW,YAEfE,GAAI,WAGN,CACEE,cAAe,CACb,CAAEJ,UAAW,WACb,CAAEA,UAAW,WACb,CAAEA,UAAW,WACb,CAAEA,UAAW,YAEfE,GAAI,WAGN,CACEE,cAAe,CACb,CAAEJ,UAAW,WACb,CAAEA,UAAW,WACb,CAAEA,UAAW,WACb,CAAEA,UAAW,YAEfE,GAAI,YC9BFO,EAAkBZ,IAAOC,IAAV,2EAGR,SAACC,GAAD,OAAWA,EAAMW,WA8BfC,MA3Bf,WACE,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAASP,EAAaO,OAS5B,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,IAAD,CAAsBA,UAAU,aAAaC,QAL/B,WAChBH,EAAuB,IAAZD,EAAgBE,EAAS,EAAIF,EAAU,MAKhD,cAAC,IAAD,CAAuBG,UAAU,cAAcC,QAVjC,WAChBH,EAAWD,IAAYE,EAAS,EAAI,EAAIF,EAAU,MAU/CL,EAAaF,KAAI,SAACY,EAAkBC,GACnC,IAAQf,EAAsBc,EAAtBd,cAAeF,EAAOgB,EAAPhB,GACvB,OACE,cAACO,EAAD,CAA6BC,QAASS,IAAUN,EAAU,QAAU,OAApE,SACE,cAAC,EAAD,CAAUT,cAAeA,EAAeF,GAAIA,KADxBiB,UCpBjBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.46ed9360.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst PaletteItem = styled.div`\n  position: relative;\n  background-color: ${(props) => props.colorCode};\n\n  & p {\n    position: absolute;\n    bottom: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: #ffffff;\n  }\n`;\n\nconst DesignSampleContainer = styled.div`\n  background-color: ${(props) => props.bg};\n\n`;\nfunction Palettes(props) {\n  const { colorPalettes, bg } = props;\n  return (\n    <div class=\"Container\">\n      <div class=\"Color-palettes-container\">\n        {colorPalettes.map((colorPalette) => {\n          const { colorCode } = colorPalette;\n          return (\n            <PaletteItem\n              key={colorCode}\n              colorCode={colorCode}\n              class=\"Palette-item\"\n            >\n              <p>{colorCode}</p>\n            </PaletteItem>\n          );\n        })}\n      </div>\n      <DesignSampleContainer bg={bg}/>\n    </div>\n  );\n}\n\nexport default Palettes;\n","const palettesDocs = [\n  {\n    colorPalettes: [\n      { colorCode: '#000000' },\n      { colorCode: '#3D0000' },\n      { colorCode: '#950101' },\n      { colorCode: '#FF0000' },\n    ],\n    bg: '#FFE7E7',\n  },\n\n  {\n    colorPalettes: [\n      { colorCode: '#222831' },\n      { colorCode: '#393E46' },\n      { colorCode: '#FD7014' },\n      { colorCode: '#EEEEEE' },\n    ],\n    bg: '#FFF1E8',\n  },\n\n  {\n    colorPalettes: [\n      { colorCode: '#000000' },\n      { colorCode: '#86003C' },\n      { colorCode: '#E41F7B' },\n      { colorCode: '#FF8BA0' },\n    ],\n    bg: '#FEEAF3',\n  },\n\n  {\n    colorPalettes: [\n      { colorCode: '#222831' },\n      { colorCode: '#393E46' },\n      { colorCode: '#00ADB5' },\n      { colorCode: '#00FFF5' },\n    ],\n    bg: '#E8FDFF',\n  },\n];\n\nconst colorPalettes = [\n  { colorCode: '#000000' },\n  { colorCode: '#3D0000' },\n  { colorCode: '#950101' },\n  { colorCode: '#FF0000' },\n];\n\nexport { colorPalettes, palettesDocs };\n","import { useState } from 'react';\nimport styled from 'styled-components';\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa';\n\nimport './App.css';\nimport Palettes from './components/Palettes';\nimport { palettesDocs } from './data';\n\nconst PalettesWrapper = styled.div`\n  width: 80%;\n  height: 80%;\n  display: ${(props) => props.display}\n`;\n\nfunction App() {\n  const [current, setCurrent] = useState(0);\n  const length = palettesDocs.length;\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  };\n  return (\n    <div className=\"App\">\n      <FaArrowAltCircleLeft className=\"Left-arrow\" onClick={prevSlide} />\n      <FaArrowAltCircleRight className=\"Right-arrow\" onClick={nextSlide} />\n      {palettesDocs.map((palettesDocsItem, index) => {\n        const { colorPalettes, bg } = palettesDocsItem;\n        return (\n          <PalettesWrapper key={index} display={index === current ? 'block' : 'none'}>\n            <Palettes colorPalettes={colorPalettes} bg={bg}/>\n          </PalettesWrapper>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}